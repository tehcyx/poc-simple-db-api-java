apiVersion: apps/v1
kind: StatefulSet
metadata:
   labels:
      app: postgres-java
   name: postgres-java
   namespace: {{ .Release.Namespace }}
spec:
   serviceName: "postgres-java"
   replicas: 1
   selector:
      matchLabels:
         app: postgres-java
   template:
      metadata:
         labels:
            app: postgres-java
         annotations:
            sidecar.istio.io/inject: "true"
            traffic.sidecar.istio.io/includeInboundPorts: "5432"
      spec:
         containers:
            - name: postgres-java
              image: tehcyx/postgres:0.4.2
              env:
               - name: POSTGRES_DB
                 valueFrom:
                  configMapKeyRef:
                     name: postgres-config
                     key: POSTGRES_DB
               - name: POSTGRES_USER
                 valueFrom:
                  configMapKeyRef:
                     name: postgres-config
                     key: POSTGRES_USER
               - name: POSTGRES_PASSWORD
                 valueFrom:
                  secretKeyRef:
                     name: postgres-secret
                     key: POSTGRES_PASSWORD
              ports:
              - containerPort: 5432
                name: postgresdb-java
              volumeMounts:
              - name: postgresdb-java
                mountPath: /var/lib/postgresql/data
         volumes:
            - name: postgresdb-java
              persistentVolumeClaim:
                claimName: postgres-pv-claim-java